{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction CheckEventsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const event_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(event_r1.name.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(event_r1.description.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Date: \", event_r1.start.local, \"\");\n  }\n}\nexport let CheckEventsComponent = /*#__PURE__*/(() => {\n  var _class;\n  class CheckEventsComponent {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'https://www.eventbrite.com/oauth/token'; // Utilisez le point de terminaison de l'API Eventbrite pour obtenir le jeton d'accès\n      this.apiKey = '7J346WU655FNVPFLFP';\n      this.clientSecret = '4RTDZ7A4KUDFG5PG7B2EF3RKQOMICG43PSCLQYFI4AZKSNV3E6';\n      this.redirectUri = 'VOTRE_URI_DE_REDIRECTION';\n      this.events = [];\n    }\n    ngOnInit() {\n      this.authorizeAndFetchEvents();\n    }\n    authorizeAndFetchEvents() {\n      // Étape 1: Redirigez les utilisateurs vers l'URL d'autorisation Eventbrite avec votre clé API et URI de redirection\n      const authorizationUrl = `https://www.eventbrite.com/oauth/authorize?response_type=code&client_id=${this.apiKey}&redirect_uri=${this.redirectUri}`;\n      window.location.href = authorizationUrl; // Redirection de l'utilisateur vers l'URL d'autorisation\n      // (Le reste du code qui suit sera exécuté après la redirection, à l'URI de redirection spécifiée)\n    }\n    // Méthode appelée à l'URI de redirection\n    handleAuthorizationResponse(accessCode) {\n      // Étape 2: Envoyez une requête POST pour échanger le code d'accès contre un jeton d'accès\n      const params = new HttpParams().set('grant_type', 'authorization_code').set('client_id', this.apiKey).set('client_secret', this.clientSecret).set('code', accessCode).set('redirect_uri', this.redirectUri);\n      const headers = new HttpHeaders().set('content-type', 'application/x-www-form-urlencoded');\n      this.http.post(this.apiUrl, params.toString(), {\n        headers\n      }).subscribe(response => {\n        // Le jeton d'accès est disponible dans la réponse JSON\n        const accessToken = response.access_token;\n        this.fetchEvents(accessToken);\n      }, error => {\n        console.error('Erreur lors de l\\'échange du code d\\'accès contre le jeton d\\'accès :', error);\n      });\n    }\n    fetchEvents(accessToken) {\n      // Utilisez le jeton d'accès pour authentifier les demandes API\n      const apiEndpoint = 'https://www.eventbriteapi.com/v3/users/me/events/';\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${accessToken}`);\n      this.http.get(apiEndpoint, {\n        headers\n      }).subscribe(response => {\n        // Traitez la réponse de l'API ici (liste des événements de l'utilisateur)\n        this.events = response.events;\n      }, error => {\n        console.error('Erreur lors de la récupération des événements :', error);\n      });\n    }\n  }\n  _class = CheckEventsComponent;\n  _class.ɵfac = function CheckEventsComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-check-events\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function CheckEventsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, CheckEventsComponent_div_2_Template, 7, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.events.length, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.events);\n      }\n    },\n    dependencies: [i2.NgForOf]\n  });\n  return CheckEventsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}