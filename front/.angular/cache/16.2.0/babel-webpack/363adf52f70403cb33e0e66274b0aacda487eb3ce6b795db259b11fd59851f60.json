{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction CheckEventsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const event_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(event_r1.name.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(event_r1.description.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Date: \", event_r1.start.local, \"\");\n  }\n}\nexport let CheckEventsComponent = /*#__PURE__*/(() => {\n  var _class;\n  class CheckEventsComponent {\n    constructor(route, http) {\n      this.route = route;\n      this.http = http;\n      this.accessToken = null;\n      this.events = [];\n      this.apiKey = 'VOTRE_CLE_API';\n      this.apiUrl = 'https://www.eventbriteapi.com/v3/users/me/events/';\n    }\n    ngOnInit() {\n      // Extraire le jeton d'accès de l'URL\n      this.route.fragment.subscribe(fragment => {\n        const tokenParam = fragment?.split('&').find(param => param.startsWith('access_token='));\n        this.accessToken = tokenParam?.split('=')[1] || null;\n        // Si un jeton d'accès est présent, récupérez les événements\n        if (this.accessToken) {\n          this.fetchEvents();\n        }\n      });\n    }\n    fetchEvents() {\n      // Utilisez le jeton d'accès pour authentifier les demandes API\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.accessToken}`);\n      this.http.get(this.apiUrl, {\n        headers\n      }).subscribe(response => {\n        // Traitez la réponse de l'API ici (liste des événements de l'utilisateur)\n        this.events = response.events;\n      }, error => {\n        console.error('Erreur lors de la récupération des événements :', error);\n      });\n    }\n  }\n  _class = CheckEventsComponent;\n  _class.ɵfac = function CheckEventsComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-check-events\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function CheckEventsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, CheckEventsComponent_div_2_Template, 7, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.events.length, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.events);\n      }\n    },\n    dependencies: [i3.NgForOf]\n  });\n  return CheckEventsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}